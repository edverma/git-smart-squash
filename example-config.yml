# Git Smart Squash Configuration Example
# Copy to .git-smart-squash.yml and customize for your project

# AI-powered commit grouping configuration
grouping:
  # These settings are maintained for backward compatibility but are not used with AI grouping
  time_window: 1800
  min_file_overlap: 1  
  similarity_threshold: 0.7

commit_format:
  # Allowed commit types (conventional commits)
  types:
    - feat      # New features
    - fix       # Bug fixes
    - docs      # Documentation changes
    - style     # Code style/formatting
    - refactor  # Code refactoring
    - test      # Adding or updating tests
    - chore     # Maintenance tasks
    - perf      # Performance improvements
    - ci        # CI/CD changes
    - build     # Build system changes
  
  # Whether scope is required in commit messages
  scope_required: false
  
  # Maximum length for commit subject line
  max_subject_length: 50
  
  # Whether commit body is required
  body_required: false

ai:
  # AI provider for commit grouping analysis
  # Options: openai, anthropic, local
  provider: local
  
  # Model to use for grouping analysis
  # OpenAI: gpt-4, gpt-4-turbo, gpt-3.5-turbo
  # Anthropic: claude-3-5-sonnet-20241022, claude-3-haiku-20240307
  # Local: devstral, mistral, llama3, etc. (via Ollama)
  model: devstral
  
  # Environment variable containing API key
  api_key_env: OPENAI_API_KEY
  
  # Custom base URL for OpenAI-compatible APIs (optional)
  # Examples:
  # - Ollama: http://localhost:11434
  # - Google Gemini: https://generativelanguage.googleapis.com/v1beta/openai/
  # - Grok: https://api.x.ai/v1
  # - Azure OpenAI: https://your-resource.openai.azure.com/
  # base_url: https://api.openai.com/v1

output:
  # Run in dry-run mode by default (recommended)
  dry_run_default: true
  
  # Create backup branch before operations
  backup_branch: true
  
  # Protect against force pushes to shared branches
  force_push_protection: true

# Provider-specific examples (use ai section above for actual configuration)
examples:
  openai:
    provider: openai
    model: gpt-4
    api_key_env: OPENAI_API_KEY
  
  anthropic:
    provider: anthropic
    model: claude-3-5-sonnet-20241022
    api_key_env: ANTHROPIC_API_KEY
  
  local_ollama:
    provider: local
    model: devstral
    base_url: http://localhost:11434
  
  azure_openai:
    provider: openai
    model: gpt-4
    api_key_env: AZURE_OPENAI_API_KEY
    base_url: https://your-resource.openai.azure.com/

# Project-specific settings
project:
  # Exclude certain file patterns from analysis
  exclude_patterns:
    - "*.log"
    - "*.tmp"
    - "node_modules/**"
    - ".git/**"
  
  # Custom commit type mappings based on file patterns
  file_type_mappings:
    "test/**": test
    "docs/**": docs
    "*.md": docs
    "*.yml": ci
    "*.yaml": ci
    "Dockerfile": ci